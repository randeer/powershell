# Check if 'winget' is installed and get its version
$logPath = "C:\temp\winget_install_log.txt"
$wingetPath = Get-Command winget -ErrorAction SilentlyContinue
$currentVersion = if ($wingetPath) {
    try {
        $version = (winget --version).Trim()
        Add-Content -Path $logPath -Value "$(Get-Date) - Current winget version: $version"
        $version
    } catch {
        Add-Content -Path $logPath -Value "$(Get-Date) - Error getting winget version"
        $null
    }
} else {
    Add-Content -Path $logPath -Value "$(Get-Date) - winget not found"
    $null
}

# Install winget if it's not found or version isn't v1.9.25200
if ($wingetPath -eq $null -or $currentVersion -ne "v1.9.25200") {
    Add-Content -Path $logPath -Value "$(Get-Date) - Installing/Updating winget to v1.9.25200..."
    # Install winget (Microsoft.DesktopAppInstaller)
    $msixPath = "C:\temp\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
    if (Test-Path $msixPath) {
        # Installing MSIX package
        try {
            # Run Add-AppxPackage to install winget
            $installProcess = Start-Process powershell -ArgumentList "Add-AppxPackage -Path '$msixPath'" -PassThru
            $installProcess.WaitForExit()  # Wait for the installation to complete
            
            # Capture output of the installation
            $installExitCode = $installProcess.ExitCode
            $logMessage = if ($installExitCode -eq 0) { 
                "winget installation completed successfully." 
            } else { 
                "winget installation failed with exit code $installExitCode." 
            }
            Add-Content -Path $logPath -Value "$(Get-Date) - $logMessage"
        } catch {
            Add-Content -Path $logPath -Value "$(Get-Date) - Error: $_"
        }
    } else {
        Add-Content -Path $logPath -Value "$(Get-Date) - MSIX bundle not found at $msixPath"
    }
} else {
    Add-Content -Path $logPath -Value "$(Get-Date) - winget v1.9.25200 is already installed."
}
