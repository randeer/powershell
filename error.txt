http://windowsupdate.microsoft.com is not reachable.
http://www.windowsupdate.microsoft.com is not reachable.
https://www.windowsupdate.microsoft.com is not reachable.
http://www.update.microsoft.com is not reachable.
https://www.update.microsoft.com is not reachable.
http://www.windowsupdate.com is not reachable.
http://download.windowsupdate.com is reachable.
http://download.microsoft.com is reachable.
http://www.download.windowsupdate.com is reachable.
http://wustat.windows.com is not reachable.
http://ntservicepack.microsoft.com is reachable.


HResult      : 0x8024401C
Message Id   : WU_E_PT_HTTP_STATUS_REQUEST_TIMEOUT
Message Text : Same as HTTP status 408 - the server timed out waiting for the request.
Update Source        : Microsoft

HResult      : 0x80240438
Message Id   : WU_E_PT_ENDPOINT_UNREACHABLE
Message Text : There is no route or network connectivity to the endpoint.
Update Source        : Microsoft


HResult      : 0x8024002E
Message Id   : WU_E_WU_DISABLED
Message Text : Access to an unmanaged server is not allowed.
Update Source        : Microsoft
 


net stop wuauserv
net stop cryptSvc
net stop bits
net stop msiserver
ren C:\Windows\SoftwareDistribution SoftwareDistribution.old
ren C:\Windows\System32\catroot2 catroot2.old
net start wuauserv
net start cryptSvc
net start bits
net start msiserver

netsh winhttp show proxy


PS C:\> Get-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" | Format-List


WUServer                                     :
WUStatusServer                               :
UpdateServiceUrlAlternate                    :
TargetGroupEnabled                           : 1
TargetGroup                                  : NC-DAAS-SR
SetDisablePauseUXAccess                      : 1
NoAutoUpdate                                 : 1
DisableWindowsUpdateAccess                   : 1
TargetReleaseVersion                         : 1
ProductVersion                               : Windows 10
TargetReleaseVersionInfo                     :
DoNotConnectToWindowsUpdateInternetLocations :
PSPath                                       : Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
PSParentPath                                 : Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows
PSChildName                                  : WindowsUpdate
PSDrive                                      : HKLM
PSProvider                                   : Microsoft.PowerShell.Core\Registry


Get-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate" -Name "DisableWindowsUpdateAccess"


Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate" -Name "DisableWindowsUpdateAccess" -Value 0


# Check Windows Update Policies
Get-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" -ErrorAction SilentlyContinue | Format-Table -AutoSize

# Check AU (Automatic Updates) Settings
Get-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -ErrorAction SilentlyContinue | Format-Table -AutoSize

# Check BITS Settings
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\BITS" -ErrorAction SilentlyContinue | Format-Table -AutoSize

# Check Windows Update Agent Settings
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate" -ErrorAction SilentlyContinue | Format-Table -AutoSize

# Check Network Settings
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings" -ErrorAction SilentlyContinue | Format-Table -AutoSize

# Check if specific problematic keys exist
$paths = @(
    "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate",
    "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"
)

$keysToCheck = @("WUServer", "WUStatusServer", "UseWUServer", "DisableWindowsUpdateAccess")

foreach ($path in $paths) {
    if (Test-Path $path) {
        foreach ($key in $keysToCheck) {
            $value = (Get-ItemProperty -Path $path -Name $key -ErrorAction SilentlyContinue).$key
            if ($null -ne $value) {
                Write-Host "Found $key in $path with value: $value"
            }
        }
    }
}



