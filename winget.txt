# Get the current user context
$UserContext = ([System.Security.Principal.WindowsIdentity]::GetCurrent()).Name
# Split the UserContext by backslash and get the second part (the username)
$username = ($UserContext.Split('\'))[1]
# Initialize $wingetPath variable
$wingetPath = ""

Write-Output "Current UserContext: $UserContext"
if($UserContext -ne "NT AUTHORITY\SYSTEM"){
    Write-Output "Copying script from winget.exe"
    # Copy winget.exe for non-SYSTEM users
    Copy-Item ./winget.exe -Destination "C:\Users\$username\AppData\Local\Microsoft\WindowsApps\winget.exe" -Force
    $wingetPath = "C:\Users\$username\AppData\Local\Microsoft\WindowsApps\winget.exe"
    Write-Output "Winget Path for ${username}: $wingetPath"
} else {
    # For SYSTEM user, find the winget.exe in the WindowsApps folder
    $wingetPath = Get-ChildItem "C:\Program Files\WindowsApps" -Recurse -Filter "winget.exe" | 
                  Sort-Object FullName -Descending | 
                  Select-Object -First 1 -ExpandProperty FullName
    Write-Output "Winget Path for SYSTEM: $wingetPath"
}

# Output the final winget path
Write-Output "Final Winget Path: $wingetPath"

# Prepare log file path
$logFilePath = "C:\Temp\storeupdate.log"

# Ensure the directory exists
if (-not (Test-Path "C:\Temp")) {
    New-Item -Path "C:\" -Name "Temp" -ItemType "Directory" -Force
}

# Run the winget upgrade command and capture output using PowerShell redirection
Write-Output "Running winget upgrade..."
try {
    # Capture both output and errors
    $output = & $wingetPath upgrade 2>&1 | Out-String

    # Prepare the log content
    $logContent = @"
Winget upgrade completed at $(Get-Date)
Command Output:
$output
"@

    # Write the log content to the file
    Set-Content -Path $logFilePath -Value $logContent -Force
    
    Write-Output "Upgrade process finished."
    Write-Output "Log written to: $logFilePath"
    
    # Display the output in console as well
    Write-Output $output
}
catch {
    $errorMessage = "Error occurred: $($_.Exception.Message)"
    Write-Output $errorMessage
    Add-Content -Path $logFilePath -Value $errorMessage
}

------------------------------------------------
Winget upgrade completed. Output:
Name                                      Id                      Version          Available        Source
----------------------------------------------------------------------------------------------------------
Microsoft 365 Apps for enterprise - en-us Microsoft.Office        16.0.17328.20670 16.0.18129.20158 winget
Teams Machine-Wide Installer              Microsoft.Teams.Classic 1.6.0.18681      1.7.00.33761     winget

Upgrade process finished.

